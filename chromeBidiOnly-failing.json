{
  "failing": [
    "Accessibility should work for showcase",
    "Accessibility iframes should not include iframe data if not requested",
    "Accessibility iframes same-origin iframe (interesting only)",
    "Accessibility iframes cross-origin iframe (interesting only)",
    "Accessibility iframes same-origin iframe (all nodes)",
    "Accessibility filtering children of leaf nodes should not report Document as leaf node",
    "Accessibility filtering children of leaf nodes root option should work with nested button inside h1 with interestingOnly:true",
    "Accessibility filtering children of leaf nodes elementHandle() should get the parent ElementHandle from a text node accessibility node",
    "ElementHandle.backendNodeId should work",
    "Target.createCDPSession should work",
    "Target.createCDPSession should send events",
    "Target.createCDPSession should enable and disable domains independently",
    "Target.createCDPSession should be able to detach session",
    "Target.createCDPSession should throw nice errors",
    "Target.createCDPSession should respect custom timeout",
    "Target.createCDPSession should keep the underlying connection after being detached",
    "Target.createCDPSession should expose detached state",
    "DevTools browser.pages() should return a DevTools page if handleDevToolsAsPage is provided in launch()",
    "extensions can evaluate in the service worker",
    "Prerender with emulation can configure viewport for prerendered pages",
    "page.queryObjects should work",
    "page.queryObjects should work for non-trivial page",
    "Page.click should click the button with deviceScaleFactor set",
    "ElementHandle specs ElementHandle.boundingBox should work",
    "Emulation Page.viewport should support mobile emulation",
    "Emulation Page.viewport should update media queries when resoltion changes",
    "Emulation Page.viewport should load correct pictures when emulation dpr",
    "Emulation Page.emulate should work",
    "Emulation Page.emulateNetworkConditions should support offline",
    "Frame specs Frame Management should support framesets",
    "Frame specs Frame.prototype.frameElement should handle shadow roots",
    "Launcher specs Puppeteer Puppeteer.launch should set the default viewport",
    "Page Page.Events.PageError should fire for all value types",
    "Page Page.setUserAgent should work with platform option",
    "Page Page.setUserAgent should work with platform option without userAgent",
    "Screenshots Page.screenshot should work",
    "Screenshots Page.screenshot should clip rect",
    "Screenshots Page.screenshot should get screenshot bigger than the viewport",
    "Screenshots Page.screenshot should clip clip bigger than the viewport without \"captureBeyondViewport\"",
    "Screenshots Page.screenshot should take fullPage screenshots",
    "Screenshots Page.screenshot should take fullPage screenshots without captureBeyondViewport",
    "Screenshots Page.screenshot should return base64",
    "Screenshots ElementHandle.screenshot should capture full element when larger than viewport"
  ],
  "pending": [
    "waittask specs Frame.waitForSelector should work when node is added in a shadow root"
  ]
}